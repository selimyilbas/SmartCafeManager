// lib/providers/stock_admin_provider.dart

import 'package:flutter/foundation.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import '../services/inventory_service.dart';

class StockAdminProvider extends ChangeNotifier {
  final _srv = InventoryService();

  /// Kritik stokta (stockQty â‰¤ minQty) olan Ã¼rÃ¼nleri 
  /// server-side deÄŸil, client-side filtreleyerek verir.
  Stream<List<QueryDocumentSnapshot<Map<String, dynamic>>>> get critical$ {
    return _srv.streamCritical();
  }

  /// TÃ¼m envanteri (tÃ¼m kalemleri) QueryDocumentSnapshot listesi olarak dÃ¶ner.
  Stream<List<QueryDocumentSnapshot<Map<String, dynamic>>>> get allItems$ {
    //  ğŸ‘‡ Burada eski 'streamInventory()' yerine 'streamInventorySnapshots()' kullanÄ±yoruz:
    return _srv.streamInventorySnapshots().map((snap) => snap.docs);
  }

  /// StoÄŸu birebir ayarlar (inventory koleksiyonundaki stockQty alanÄ±nÄ± set eder).
  Future<void> setStockQty(String id, int qty) => _srv.setStockQty(id, qty);

  /// Kritik eÅŸiÄŸi (minQty) ayarlar.
  Future<void> setMinQty(String id, int minQty) => _srv.updateMinQty(id, minQty);
}
